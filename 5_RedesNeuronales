{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"116SCPQOt6tI00jKhqipYRelTDjmxaDHF","timestamp":1664740500999}],"collapsed_sections":[],"toc_visible":true,"authorship_tag":"ABX9TyP7PiZ4Lntisj/FqjRmo36z"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# RED NEURONAL LSTM"],"metadata":{"id":"_1LwHYFzTs_5"}},{"cell_type":"markdown","source":["https://www.projectpro.io/article/stock-price-prediction-using-machine-learning-project/571"],"metadata":{"id":"hzYPx0UfTwNI"}},{"cell_type":"markdown","source":["## Importación de las librerías"],"metadata":{"id":"pGRg7u1fTppS"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"LzXITpoAlsCs"},"outputs":[],"source":["#Se importan las librerías\n","\n","## Numéricas\n","import math\n","import numpy as np\n","import pandas as pd\n","\n","## Formato fechas\n","from datetime import date, timedelta, datetime\n","import matplotlib.dates as mdates\n","import datetime as dt\n","\n","## Graficas\n","import matplotlib.pyplot as plt\n","from matplotlib import style\n","import seaborn as sns\n","import plotly.graph_objects as go\n","import plotly.express as px\n","from pandas.plotting import register_matplotlib_converters\n","sns.set_style('white', { 'axes.spines.right': False, 'axes.spines.top': False})\n","\n","## Modelos\n","import tensorflow as tf\n","import statsmodels.api as sm\n","from tensorflow import keras\n","from tensorflow.keras import layers\n","from tensorflow.keras import Sequential\n","from tensorflow.keras.layers import LSTM, Dense, Dropout\n","from tensorflow.keras.callbacks import EarlyStopping\n","from sklearn.preprocessing import RobustScaler, MinMaxScaler, StandardScaler\n","from sklearn.model_selection import train_test_split, RandomizedSearchCV, RepeatedKFold, GridSearchCV, KFold, TimeSeriesSplit\n","\n","## Métricas\n","from sklearn.metrics import mean_absolute_error, mean_squared_error, mean_absolute_percentage_error\n","from scipy import stats\n","import sklearn.metrics as metrics"]},{"cell_type":"markdown","source":["Estilos de gráficas"],"metadata":{"id":"CNqRYOO1MmYO"}},{"cell_type":"code","source":["# Configuración de estilos de matplotlib\n","plt.rcParams['image.cmap'] = \"bwr\"\n","plt.rcParams['savefig.bbox'] = \"tight\"\n","style.use('ggplot') or plt.style.use('ggplot')"],"metadata":{"id":"zFvmJDmPMj3X"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Carga de datos"],"metadata":{"id":"waLVd2Xq4h8y"}},{"cell_type":"code","source":["#Se importa la librería de google colab para gestionar archivos\n","from google.colab import files"],"metadata":{"id":"DtAbgZ0EH4d_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Se conecta con Google Drive\n","from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fxM-y1z9H54o","executionInfo":{"status":"ok","timestamp":1664740723072,"user_tz":-120,"elapsed":16556,"user":{"displayName":"Pedro AH","userId":"08130580654054495788"}},"outputId":"f30f7cb7-efa1-47da-c893-a1c2d28e3abb"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["#Ruta donde se tienen los datos\n","ruta_datos='/content/drive/MyDrive/0_TFM_BD/data/'\n","ruta_datos_carga=ruta_datos+'saved/'"],"metadata":{"id":"vU6guYSKH66L"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Carga de los datos\n","df=pd.read_csv(ruta_datos_carga+'df_exp_2020-01-01_2022-01-01.csv')\n","\n","#Generación del indice como fecha\n","df['date']=pd.to_datetime(df.date)\n","df.set_index('date', inplace=True)\n","\n","df_ori=df.copy()"],"metadata":{"id":"QLUolse8IY8x"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"1AOKjMRLOyIa","executionInfo":{"status":"ok","timestamp":1664740728782,"user_tz":-120,"elapsed":230,"user":{"displayName":"Pedro AH","userId":"08130580654054495788"}},"outputId":"f430aa24-4e57-4271-bf9e-8e3b393696e9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             BZ=F  GBPUSD=X    ^GDAXI     ^N225          MA7      difMA7  \\\n","date                                                                       \n","2020-01-13  64.20    1.3046  13451.52  23850.57  9609.328571  -65.428571   \n","2020-01-14  64.49    1.2988  13456.49  24025.17  9588.285714  -59.985714   \n","2020-01-15  64.00    1.3023  13432.30  23916.58  9571.385714  -59.685714   \n","2020-01-16  64.62    1.3041  13429.43  23933.13  9558.642857   13.857143   \n","2020-01-17  64.85    1.3079  13526.13  24041.26  9557.600000  123.700000   \n","...           ...       ...       ...       ...          ...         ...   \n","2021-12-21  73.98    1.3210  15447.44  28517.59  8324.342857   63.157143   \n","2021-12-22  75.29    1.3270  15593.47  28562.21  8328.242857  130.857143   \n","2021-12-23  76.85    1.3352  15756.31  28798.37  8347.728571  215.971429   \n","2021-12-27  78.60    1.3404  15835.25  28676.46  8374.185714  247.914286   \n","2021-12-28  78.94    1.3443  15963.70  29069.16  8423.771429  265.128571   \n","\n","              dif  flag   ^IBEX  futIBEX  \n","date                                      \n","2020-01-13  -29.7   0.0  9543.9   9528.3  \n","2020-01-14  -15.6   0.0  9528.3   9511.7  \n","2020-01-15  -16.6   1.0  9511.7   9572.5  \n","2020-01-16   60.8   1.0  9572.5   9681.3  \n","2020-01-17  108.8   0.0  9681.3   9658.8  \n","...           ...   ...     ...      ...  \n","2021-12-21  145.1   1.0  8387.5   8459.1  \n","2021-12-22   71.6   1.0  8459.1   8563.7  \n","2021-12-23  104.6   1.0  8563.7   8563.7  \n","2021-12-27   58.4   1.0  8622.1   8688.9  \n","2021-12-28   66.8   0.0  8688.9   8673.7  \n","\n","[504 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-56371c50-042d-4a45-a61c-db9de70ef7b9\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>BZ=F</th>\n","      <th>GBPUSD=X</th>\n","      <th>^GDAXI</th>\n","      <th>^N225</th>\n","      <th>MA7</th>\n","      <th>difMA7</th>\n","      <th>dif</th>\n","      <th>flag</th>\n","      <th>^IBEX</th>\n","      <th>futIBEX</th>\n","    </tr>\n","    <tr>\n","      <th>date</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-01-13</th>\n","      <td>64.20</td>\n","      <td>1.3046</td>\n","      <td>13451.52</td>\n","      <td>23850.57</td>\n","      <td>9609.328571</td>\n","      <td>-65.428571</td>\n","      <td>-29.7</td>\n","      <td>0.0</td>\n","      <td>9543.9</td>\n","      <td>9528.3</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-14</th>\n","      <td>64.49</td>\n","      <td>1.2988</td>\n","      <td>13456.49</td>\n","      <td>24025.17</td>\n","      <td>9588.285714</td>\n","      <td>-59.985714</td>\n","      <td>-15.6</td>\n","      <td>0.0</td>\n","      <td>9528.3</td>\n","      <td>9511.7</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-15</th>\n","      <td>64.00</td>\n","      <td>1.3023</td>\n","      <td>13432.30</td>\n","      <td>23916.58</td>\n","      <td>9571.385714</td>\n","      <td>-59.685714</td>\n","      <td>-16.6</td>\n","      <td>1.0</td>\n","      <td>9511.7</td>\n","      <td>9572.5</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-16</th>\n","      <td>64.62</td>\n","      <td>1.3041</td>\n","      <td>13429.43</td>\n","      <td>23933.13</td>\n","      <td>9558.642857</td>\n","      <td>13.857143</td>\n","      <td>60.8</td>\n","      <td>1.0</td>\n","      <td>9572.5</td>\n","      <td>9681.3</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-17</th>\n","      <td>64.85</td>\n","      <td>1.3079</td>\n","      <td>13526.13</td>\n","      <td>24041.26</td>\n","      <td>9557.600000</td>\n","      <td>123.700000</td>\n","      <td>108.8</td>\n","      <td>0.0</td>\n","      <td>9681.3</td>\n","      <td>9658.8</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-21</th>\n","      <td>73.98</td>\n","      <td>1.3210</td>\n","      <td>15447.44</td>\n","      <td>28517.59</td>\n","      <td>8324.342857</td>\n","      <td>63.157143</td>\n","      <td>145.1</td>\n","      <td>1.0</td>\n","      <td>8387.5</td>\n","      <td>8459.1</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-22</th>\n","      <td>75.29</td>\n","      <td>1.3270</td>\n","      <td>15593.47</td>\n","      <td>28562.21</td>\n","      <td>8328.242857</td>\n","      <td>130.857143</td>\n","      <td>71.6</td>\n","      <td>1.0</td>\n","      <td>8459.1</td>\n","      <td>8563.7</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-23</th>\n","      <td>76.85</td>\n","      <td>1.3352</td>\n","      <td>15756.31</td>\n","      <td>28798.37</td>\n","      <td>8347.728571</td>\n","      <td>215.971429</td>\n","      <td>104.6</td>\n","      <td>1.0</td>\n","      <td>8563.7</td>\n","      <td>8563.7</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-27</th>\n","      <td>78.60</td>\n","      <td>1.3404</td>\n","      <td>15835.25</td>\n","      <td>28676.46</td>\n","      <td>8374.185714</td>\n","      <td>247.914286</td>\n","      <td>58.4</td>\n","      <td>1.0</td>\n","      <td>8622.1</td>\n","      <td>8688.9</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-28</th>\n","      <td>78.94</td>\n","      <td>1.3443</td>\n","      <td>15963.70</td>\n","      <td>29069.16</td>\n","      <td>8423.771429</td>\n","      <td>265.128571</td>\n","      <td>66.8</td>\n","      <td>0.0</td>\n","      <td>8688.9</td>\n","      <td>8673.7</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>504 rows × 10 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-56371c50-042d-4a45-a61c-db9de70ef7b9')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-56371c50-042d-4a45-a61c-db9de70ef7b9 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-56371c50-042d-4a45-a61c-db9de70ef7b9');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","source":["## Creación de los conjuntos de datos"],"metadata":{"id":"oR5MUn86VAjM"}},{"cell_type":"code","source":["#Columna donde se recogen las variables predictoras\n","var_pred=df.columns.to_list()\n","var_pred.remove('futIBEX')\n","var_pred.remove('flag')\n","var_pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LPsPhklbSIn0","executionInfo":{"status":"ok","timestamp":1664740798431,"user_tz":-120,"elapsed":266,"user":{"displayName":"Pedro AH","userId":"08130580654054495788"}},"outputId":"76199d79-2198-494f-d2ef-ad9b18a3c3be"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['BZ=F', 'GBPUSD=X', '^GDAXI', '^N225', 'MA7', 'difMA7', 'dif', '^IBEX']"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["#Se definen los conjuntos de datos\n","target_y = df['futIBEX']\n","X_feat=df[var_pred]\n","X_feat"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"m0hb2AVgR787","executionInfo":{"status":"ok","timestamp":1664740832393,"user_tz":-120,"elapsed":249,"user":{"displayName":"Pedro AH","userId":"08130580654054495788"}},"outputId":"7471c968-8b7a-4f03-cbab-01ee7782f197"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             BZ=F  GBPUSD=X    ^GDAXI     ^N225          MA7      difMA7  \\\n","date                                                                       \n","2020-01-13  64.20    1.3046  13451.52  23850.57  9609.328571  -65.428571   \n","2020-01-14  64.49    1.2988  13456.49  24025.17  9588.285714  -59.985714   \n","2020-01-15  64.00    1.3023  13432.30  23916.58  9571.385714  -59.685714   \n","2020-01-16  64.62    1.3041  13429.43  23933.13  9558.642857   13.857143   \n","2020-01-17  64.85    1.3079  13526.13  24041.26  9557.600000  123.700000   \n","...           ...       ...       ...       ...          ...         ...   \n","2021-12-21  73.98    1.3210  15447.44  28517.59  8324.342857   63.157143   \n","2021-12-22  75.29    1.3270  15593.47  28562.21  8328.242857  130.857143   \n","2021-12-23  76.85    1.3352  15756.31  28798.37  8347.728571  215.971429   \n","2021-12-27  78.60    1.3404  15835.25  28676.46  8374.185714  247.914286   \n","2021-12-28  78.94    1.3443  15963.70  29069.16  8423.771429  265.128571   \n","\n","              dif   ^IBEX  \n","date                       \n","2020-01-13  -29.7  9543.9  \n","2020-01-14  -15.6  9528.3  \n","2020-01-15  -16.6  9511.7  \n","2020-01-16   60.8  9572.5  \n","2020-01-17  108.8  9681.3  \n","...           ...     ...  \n","2021-12-21  145.1  8387.5  \n","2021-12-22   71.6  8459.1  \n","2021-12-23  104.6  8563.7  \n","2021-12-27   58.4  8622.1  \n","2021-12-28   66.8  8688.9  \n","\n","[504 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-ae263434-13d0-4b71-883f-3e95cd3cf12f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>BZ=F</th>\n","      <th>GBPUSD=X</th>\n","      <th>^GDAXI</th>\n","      <th>^N225</th>\n","      <th>MA7</th>\n","      <th>difMA7</th>\n","      <th>dif</th>\n","      <th>^IBEX</th>\n","    </tr>\n","    <tr>\n","      <th>date</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-01-13</th>\n","      <td>64.20</td>\n","      <td>1.3046</td>\n","      <td>13451.52</td>\n","      <td>23850.57</td>\n","      <td>9609.328571</td>\n","      <td>-65.428571</td>\n","      <td>-29.7</td>\n","      <td>9543.9</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-14</th>\n","      <td>64.49</td>\n","      <td>1.2988</td>\n","      <td>13456.49</td>\n","      <td>24025.17</td>\n","      <td>9588.285714</td>\n","      <td>-59.985714</td>\n","      <td>-15.6</td>\n","      <td>9528.3</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-15</th>\n","      <td>64.00</td>\n","      <td>1.3023</td>\n","      <td>13432.30</td>\n","      <td>23916.58</td>\n","      <td>9571.385714</td>\n","      <td>-59.685714</td>\n","      <td>-16.6</td>\n","      <td>9511.7</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-16</th>\n","      <td>64.62</td>\n","      <td>1.3041</td>\n","      <td>13429.43</td>\n","      <td>23933.13</td>\n","      <td>9558.642857</td>\n","      <td>13.857143</td>\n","      <td>60.8</td>\n","      <td>9572.5</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-17</th>\n","      <td>64.85</td>\n","      <td>1.3079</td>\n","      <td>13526.13</td>\n","      <td>24041.26</td>\n","      <td>9557.600000</td>\n","      <td>123.700000</td>\n","      <td>108.8</td>\n","      <td>9681.3</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-21</th>\n","      <td>73.98</td>\n","      <td>1.3210</td>\n","      <td>15447.44</td>\n","      <td>28517.59</td>\n","      <td>8324.342857</td>\n","      <td>63.157143</td>\n","      <td>145.1</td>\n","      <td>8387.5</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-22</th>\n","      <td>75.29</td>\n","      <td>1.3270</td>\n","      <td>15593.47</td>\n","      <td>28562.21</td>\n","      <td>8328.242857</td>\n","      <td>130.857143</td>\n","      <td>71.6</td>\n","      <td>8459.1</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-23</th>\n","      <td>76.85</td>\n","      <td>1.3352</td>\n","      <td>15756.31</td>\n","      <td>28798.37</td>\n","      <td>8347.728571</td>\n","      <td>215.971429</td>\n","      <td>104.6</td>\n","      <td>8563.7</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-27</th>\n","      <td>78.60</td>\n","      <td>1.3404</td>\n","      <td>15835.25</td>\n","      <td>28676.46</td>\n","      <td>8374.185714</td>\n","      <td>247.914286</td>\n","      <td>58.4</td>\n","      <td>8622.1</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-28</th>\n","      <td>78.94</td>\n","      <td>1.3443</td>\n","      <td>15963.70</td>\n","      <td>29069.16</td>\n","      <td>8423.771429</td>\n","      <td>265.128571</td>\n","      <td>66.8</td>\n","      <td>8688.9</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>504 rows × 8 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ae263434-13d0-4b71-883f-3e95cd3cf12f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ae263434-13d0-4b71-883f-3e95cd3cf12f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ae263434-13d0-4b71-883f-3e95cd3cf12f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["#Se normalizan los datos de las variables predictoras\n","sc=StandardScaler()\n","X_ft=sc.fit_transform(X_feat.values)\n","X_ft=pd.DataFrame(columns=X_feat.columns, data=X_ft, index=X_feat.index)\n","X_ft"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"oOmiFbswSYFW","executionInfo":{"status":"ok","timestamp":1664740936662,"user_tz":-120,"elapsed":245,"user":{"displayName":"Pedro AH","userId":"08130580654054495788"}},"outputId":"77b65626-0cb4-457a-d652-6e8ee1fb38b5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                BZ=F  GBPUSD=X    ^GDAXI     ^N225       MA7    difMA7  \\\n","date                                                                     \n","2020-01-13  0.441939 -0.448170 -0.183572 -0.548807  1.581848 -0.242308   \n","2020-01-14  0.459403 -0.549915 -0.180740 -0.499294  1.559210 -0.219209   \n","2020-01-15  0.429896 -0.488517 -0.194521 -0.530088  1.541029 -0.217935   \n","2020-01-16  0.467231 -0.456941 -0.196155 -0.525394  1.527320  0.094176   \n","2020-01-17  0.481081 -0.390281 -0.141069 -0.494731  1.526198  0.560341   \n","...              ...       ...       ...       ...       ...       ...   \n","2021-12-21  1.030873 -0.160479  0.953428  0.774652  0.199461  0.303402   \n","2021-12-22  1.109759 -0.055226  1.036616  0.787305  0.203657  0.590716   \n","2021-12-23  1.203699  0.088619  1.129380  0.854274  0.224620  0.951935   \n","2021-12-27  1.309081  0.179838  1.174349  0.819704  0.253082  1.087498   \n","2021-12-28  1.329555  0.248253  1.247522  0.931064  0.306426  1.160555   \n","\n","                 dif     ^IBEX  \n","date                            \n","2020-01-13 -0.220003  1.516356  \n","2020-01-14 -0.108996  1.499618  \n","2020-01-15 -0.116869  1.481808  \n","2020-01-16  0.492487  1.547041  \n","2020-01-17  0.870382  1.663775  \n","...              ...       ...  \n","2021-12-21  1.156165  0.275631  \n","2021-12-22  0.577513  0.352452  \n","2021-12-23  0.837316  0.464680  \n","2021-12-27  0.473592  0.527338  \n","2021-12-28  0.539724  0.599009  \n","\n","[504 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-017ea714-d6a7-41bc-b2e1-a0334f28aa37\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>BZ=F</th>\n","      <th>GBPUSD=X</th>\n","      <th>^GDAXI</th>\n","      <th>^N225</th>\n","      <th>MA7</th>\n","      <th>difMA7</th>\n","      <th>dif</th>\n","      <th>^IBEX</th>\n","    </tr>\n","    <tr>\n","      <th>date</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-01-13</th>\n","      <td>0.441939</td>\n","      <td>-0.448170</td>\n","      <td>-0.183572</td>\n","      <td>-0.548807</td>\n","      <td>1.581848</td>\n","      <td>-0.242308</td>\n","      <td>-0.220003</td>\n","      <td>1.516356</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-14</th>\n","      <td>0.459403</td>\n","      <td>-0.549915</td>\n","      <td>-0.180740</td>\n","      <td>-0.499294</td>\n","      <td>1.559210</td>\n","      <td>-0.219209</td>\n","      <td>-0.108996</td>\n","      <td>1.499618</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-15</th>\n","      <td>0.429896</td>\n","      <td>-0.488517</td>\n","      <td>-0.194521</td>\n","      <td>-0.530088</td>\n","      <td>1.541029</td>\n","      <td>-0.217935</td>\n","      <td>-0.116869</td>\n","      <td>1.481808</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-16</th>\n","      <td>0.467231</td>\n","      <td>-0.456941</td>\n","      <td>-0.196155</td>\n","      <td>-0.525394</td>\n","      <td>1.527320</td>\n","      <td>0.094176</td>\n","      <td>0.492487</td>\n","      <td>1.547041</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-17</th>\n","      <td>0.481081</td>\n","      <td>-0.390281</td>\n","      <td>-0.141069</td>\n","      <td>-0.494731</td>\n","      <td>1.526198</td>\n","      <td>0.560341</td>\n","      <td>0.870382</td>\n","      <td>1.663775</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-21</th>\n","      <td>1.030873</td>\n","      <td>-0.160479</td>\n","      <td>0.953428</td>\n","      <td>0.774652</td>\n","      <td>0.199461</td>\n","      <td>0.303402</td>\n","      <td>1.156165</td>\n","      <td>0.275631</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-22</th>\n","      <td>1.109759</td>\n","      <td>-0.055226</td>\n","      <td>1.036616</td>\n","      <td>0.787305</td>\n","      <td>0.203657</td>\n","      <td>0.590716</td>\n","      <td>0.577513</td>\n","      <td>0.352452</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-23</th>\n","      <td>1.203699</td>\n","      <td>0.088619</td>\n","      <td>1.129380</td>\n","      <td>0.854274</td>\n","      <td>0.224620</td>\n","      <td>0.951935</td>\n","      <td>0.837316</td>\n","      <td>0.464680</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-27</th>\n","      <td>1.309081</td>\n","      <td>0.179838</td>\n","      <td>1.174349</td>\n","      <td>0.819704</td>\n","      <td>0.253082</td>\n","      <td>1.087498</td>\n","      <td>0.473592</td>\n","      <td>0.527338</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-28</th>\n","      <td>1.329555</td>\n","      <td>0.248253</td>\n","      <td>1.247522</td>\n","      <td>0.931064</td>\n","      <td>0.306426</td>\n","      <td>1.160555</td>\n","      <td>0.539724</td>\n","      <td>0.599009</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>504 rows × 8 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-017ea714-d6a7-41bc-b2e1-a0334f28aa37')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-017ea714-d6a7-41bc-b2e1-a0334f28aa37 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-017ea714-d6a7-41bc-b2e1-a0334f28aa37');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["#Se normalizan los datos de la variable a predecir\n","sc2=StandardScaler()\n","y_ft=sc2.fit_transform(df[['futIBEX']])\n","y_ft=pd.DataFrame(columns=df[['futIBEX']].columns, data=y_ft, index=df[['futIBEX']].index)\n","y_ft"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"rxSLDj7YVMwQ","executionInfo":{"status":"ok","timestamp":1664741809005,"user_tz":-120,"elapsed":233,"user":{"displayName":"Pedro AH","userId":"08130580654054495788"}},"outputId":"f13bd954-4749-4e2c-f7fc-77905beb19eb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             futIBEX\n","date                \n","2020-01-13  1.505539\n","2020-01-14  1.487679\n","2020-01-15  1.553092\n","2020-01-16  1.670146\n","2020-01-17  1.645939\n","...              ...\n","2021-12-21  0.355222\n","2021-12-22  0.467758\n","2021-12-23  0.467758\n","2021-12-27  0.602456\n","2021-12-28  0.586103\n","\n","[504 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-b8a87dc8-d094-4947-8026-eddc2973e9fb\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>futIBEX</th>\n","    </tr>\n","    <tr>\n","      <th>date</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-01-13</th>\n","      <td>1.505539</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-14</th>\n","      <td>1.487679</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-15</th>\n","      <td>1.553092</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-16</th>\n","      <td>1.670146</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-17</th>\n","      <td>1.645939</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-21</th>\n","      <td>0.355222</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-22</th>\n","      <td>0.467758</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-23</th>\n","      <td>0.467758</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-27</th>\n","      <td>0.602456</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-28</th>\n","      <td>0.586103</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>504 rows × 1 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b8a87dc8-d094-4947-8026-eddc2973e9fb')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b8a87dc8-d094-4947-8026-eddc2973e9fb button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b8a87dc8-d094-4947-8026-eddc2973e9fb');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["stock_data_ft=X_ft.join(y_ft)\n","stock_data_ft"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"NhPQDce8WEbh","executionInfo":{"status":"ok","timestamp":1664741850559,"user_tz":-120,"elapsed":255,"user":{"displayName":"Pedro AH","userId":"08130580654054495788"}},"outputId":"7c93671e-c5ab-40d7-a9f0-c1b3d5d72992"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                BZ=F  GBPUSD=X    ^GDAXI     ^N225       MA7    difMA7  \\\n","date                                                                     \n","2020-01-13  0.441939 -0.448170 -0.183572 -0.548807  1.581848 -0.242308   \n","2020-01-14  0.459403 -0.549915 -0.180740 -0.499294  1.559210 -0.219209   \n","2020-01-15  0.429896 -0.488517 -0.194521 -0.530088  1.541029 -0.217935   \n","2020-01-16  0.467231 -0.456941 -0.196155 -0.525394  1.527320  0.094176   \n","2020-01-17  0.481081 -0.390281 -0.141069 -0.494731  1.526198  0.560341   \n","...              ...       ...       ...       ...       ...       ...   \n","2021-12-21  1.030873 -0.160479  0.953428  0.774652  0.199461  0.303402   \n","2021-12-22  1.109759 -0.055226  1.036616  0.787305  0.203657  0.590716   \n","2021-12-23  1.203699  0.088619  1.129380  0.854274  0.224620  0.951935   \n","2021-12-27  1.309081  0.179838  1.174349  0.819704  0.253082  1.087498   \n","2021-12-28  1.329555  0.248253  1.247522  0.931064  0.306426  1.160555   \n","\n","                 dif     ^IBEX   futIBEX  \n","date                                      \n","2020-01-13 -0.220003  1.516356  1.505539  \n","2020-01-14 -0.108996  1.499618  1.487679  \n","2020-01-15 -0.116869  1.481808  1.553092  \n","2020-01-16  0.492487  1.547041  1.670146  \n","2020-01-17  0.870382  1.663775  1.645939  \n","...              ...       ...       ...  \n","2021-12-21  1.156165  0.275631  0.355222  \n","2021-12-22  0.577513  0.352452  0.467758  \n","2021-12-23  0.837316  0.464680  0.467758  \n","2021-12-27  0.473592  0.527338  0.602456  \n","2021-12-28  0.539724  0.599009  0.586103  \n","\n","[504 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-f6fb32db-5b77-4c8c-8ad5-8da8d280be72\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>BZ=F</th>\n","      <th>GBPUSD=X</th>\n","      <th>^GDAXI</th>\n","      <th>^N225</th>\n","      <th>MA7</th>\n","      <th>difMA7</th>\n","      <th>dif</th>\n","      <th>^IBEX</th>\n","      <th>futIBEX</th>\n","    </tr>\n","    <tr>\n","      <th>date</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-01-13</th>\n","      <td>0.441939</td>\n","      <td>-0.448170</td>\n","      <td>-0.183572</td>\n","      <td>-0.548807</td>\n","      <td>1.581848</td>\n","      <td>-0.242308</td>\n","      <td>-0.220003</td>\n","      <td>1.516356</td>\n","      <td>1.505539</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-14</th>\n","      <td>0.459403</td>\n","      <td>-0.549915</td>\n","      <td>-0.180740</td>\n","      <td>-0.499294</td>\n","      <td>1.559210</td>\n","      <td>-0.219209</td>\n","      <td>-0.108996</td>\n","      <td>1.499618</td>\n","      <td>1.487679</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-15</th>\n","      <td>0.429896</td>\n","      <td>-0.488517</td>\n","      <td>-0.194521</td>\n","      <td>-0.530088</td>\n","      <td>1.541029</td>\n","      <td>-0.217935</td>\n","      <td>-0.116869</td>\n","      <td>1.481808</td>\n","      <td>1.553092</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-16</th>\n","      <td>0.467231</td>\n","      <td>-0.456941</td>\n","      <td>-0.196155</td>\n","      <td>-0.525394</td>\n","      <td>1.527320</td>\n","      <td>0.094176</td>\n","      <td>0.492487</td>\n","      <td>1.547041</td>\n","      <td>1.670146</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-17</th>\n","      <td>0.481081</td>\n","      <td>-0.390281</td>\n","      <td>-0.141069</td>\n","      <td>-0.494731</td>\n","      <td>1.526198</td>\n","      <td>0.560341</td>\n","      <td>0.870382</td>\n","      <td>1.663775</td>\n","      <td>1.645939</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-21</th>\n","      <td>1.030873</td>\n","      <td>-0.160479</td>\n","      <td>0.953428</td>\n","      <td>0.774652</td>\n","      <td>0.199461</td>\n","      <td>0.303402</td>\n","      <td>1.156165</td>\n","      <td>0.275631</td>\n","      <td>0.355222</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-22</th>\n","      <td>1.109759</td>\n","      <td>-0.055226</td>\n","      <td>1.036616</td>\n","      <td>0.787305</td>\n","      <td>0.203657</td>\n","      <td>0.590716</td>\n","      <td>0.577513</td>\n","      <td>0.352452</td>\n","      <td>0.467758</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-23</th>\n","      <td>1.203699</td>\n","      <td>0.088619</td>\n","      <td>1.129380</td>\n","      <td>0.854274</td>\n","      <td>0.224620</td>\n","      <td>0.951935</td>\n","      <td>0.837316</td>\n","      <td>0.464680</td>\n","      <td>0.467758</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-27</th>\n","      <td>1.309081</td>\n","      <td>0.179838</td>\n","      <td>1.174349</td>\n","      <td>0.819704</td>\n","      <td>0.253082</td>\n","      <td>1.087498</td>\n","      <td>0.473592</td>\n","      <td>0.527338</td>\n","      <td>0.602456</td>\n","    </tr>\n","    <tr>\n","      <th>2021-12-28</th>\n","      <td>1.329555</td>\n","      <td>0.248253</td>\n","      <td>1.247522</td>\n","      <td>0.931064</td>\n","      <td>0.306426</td>\n","      <td>1.160555</td>\n","      <td>0.539724</td>\n","      <td>0.599009</td>\n","      <td>0.586103</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>504 rows × 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f6fb32db-5b77-4c8c-8ad5-8da8d280be72')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f6fb32db-5b77-4c8c-8ad5-8da8d280be72 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f6fb32db-5b77-4c8c-8ad5-8da8d280be72');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["##Función para la creación de los datos\n","def lstm_split (data, n_steps):\n","  X, y =[],[]\n","  for i in range(len(data)-n_steps+1):\n","    X.append(data[i:i+n_steps,:-1])\n","    y.append(data[i+n_steps-1, -1])\n","\n","  return np.array(X), np.array(y)"],"metadata":{"id":"5ZrXXz-ASsfp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Generación de los datos de entrenamiento y validación\n","X1, y1 = lstm_split(stock_data_ft.values, n_steps=1)\n","\n","train_split=0.7\n","\n","split_idx = int(np.ceil(len(X1)*train_split))\n","date_index=stock_data_ft.index\n","\n","X_train, X_test = X1[:split_idx], X1[split_idx:]\n","y_train, y_test = y1[:split_idx], y1[split_idx:]\n","X_train_date, X_test_date = date_index[:split_idx], date_index[split_idx:]\n","\n","print('X1:',X1.shape)\n","print('X_train:',X_train.shape)\n","print('y_train:',y_train.shape)\n","print('X_test:',X_test.shape)\n","print('y_test:',y_test.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7mDubsoUT1cR","executionInfo":{"status":"ok","timestamp":1664743264014,"user_tz":-120,"elapsed":1,"user":{"displayName":"Pedro AH","userId":"08130580654054495788"}},"outputId":"8182e333-1d9a-4cd5-b427-4b3263b81777"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["X1: (504, 1, 8)\n","X_train: (353, 1, 8)\n","y_train: (353,)\n","X_test: (151, 1, 8)\n","y_test: (151,)\n"]}]},{"cell_type":"markdown","source":["## Creación del modelo de red neuronal"],"metadata":{"id":"53v12-TWXh0e"}},{"cell_type":"markdown","source":["### Arquitectura"],"metadata":{"id":"gDNTr5A_XnYo"}},{"cell_type":"code","source":["#Jerarquía de la red\n","lstm=Sequential()\n","\n","#Capas de la red\n","neurons=32\n","\n","lstm.add(LSTM(neurons, input_shape=(X_train.shape[1], X_train.shape[2]), activation='relu', return_sequences=True))\n","\n","#Capa de salida\n","lstm.add(Dense(1))\n","\n","#Se compila el modelo\n","lstm.compile(loss='mean_absolute_error', optimizer='adam')\n","\n","lstm.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zFoCDXY1XcCc","executionInfo":{"status":"ok","timestamp":1664743289814,"user_tz":-120,"elapsed":288,"user":{"displayName":"Pedro AH","userId":"08130580654054495788"}},"outputId":"a0b888a9-6ed1-4bd2-b91e-650c0f3dac1d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_4\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," lstm_4 (LSTM)               (None, 1, 32)             5248      \n","                                                                 \n"," dense_4 (Dense)             (None, 1, 1)              33        \n","                                                                 \n","=================================================================\n","Total params: 5,281\n","Trainable params: 5,281\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}]},{"cell_type":"markdown","source":["### Ajuste de la red"],"metadata":{"id":"jCrFyZn1Yt5K"}},{"cell_type":"code","source":["#Se entrena el modelo de red neuronal\n","history = lstm.fit(X_train, y_train, validation_data=(X_test, y_test), epochs=100, batch_size=30, verbose=2, shuffle=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_u0b_WR9YhcE","executionInfo":{"status":"ok","timestamp":1664743322536,"user_tz":-120,"elapsed":8637,"user":{"displayName":"Pedro AH","userId":"08130580654054495788"}},"outputId":"2579c68d-74e4-4806-c677-f2bdee0ed75b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","12/12 - 2s - loss: 0.8710 - val_loss: 0.8036 - 2s/epoch - 133ms/step\n","Epoch 2/100\n","12/12 - 0s - loss: 0.8290 - val_loss: 0.7752 - 54ms/epoch - 4ms/step\n","Epoch 3/100\n","12/12 - 0s - loss: 0.7882 - val_loss: 0.7468 - 67ms/epoch - 6ms/step\n","Epoch 4/100\n","12/12 - 0s - loss: 0.7435 - val_loss: 0.7188 - 55ms/epoch - 5ms/step\n","Epoch 5/100\n","12/12 - 0s - loss: 0.6931 - val_loss: 0.6907 - 79ms/epoch - 7ms/step\n","Epoch 6/100\n","12/12 - 0s - loss: 0.6367 - val_loss: 0.6615 - 57ms/epoch - 5ms/step\n","Epoch 7/100\n","12/12 - 0s - loss: 0.5760 - val_loss: 0.6303 - 75ms/epoch - 6ms/step\n","Epoch 8/100\n","12/12 - 0s - loss: 0.5269 - val_loss: 0.5961 - 54ms/epoch - 4ms/step\n","Epoch 9/100\n","12/12 - 0s - loss: 0.5070 - val_loss: 0.5583 - 72ms/epoch - 6ms/step\n","Epoch 10/100\n","12/12 - 0s - loss: 0.4976 - val_loss: 0.5172 - 74ms/epoch - 6ms/step\n","Epoch 11/100\n","12/12 - 0s - loss: 0.4843 - val_loss: 0.4729 - 59ms/epoch - 5ms/step\n","Epoch 12/100\n","12/12 - 0s - loss: 0.4702 - val_loss: 0.4258 - 63ms/epoch - 5ms/step\n","Epoch 13/100\n","12/12 - 0s - loss: 0.4563 - val_loss: 0.3771 - 56ms/epoch - 5ms/step\n","Epoch 14/100\n","12/12 - 0s - loss: 0.4428 - val_loss: 0.3283 - 67ms/epoch - 6ms/step\n","Epoch 15/100\n","12/12 - 0s - loss: 0.4302 - val_loss: 0.2836 - 65ms/epoch - 5ms/step\n","Epoch 16/100\n","12/12 - 0s - loss: 0.4187 - val_loss: 0.2473 - 74ms/epoch - 6ms/step\n","Epoch 17/100\n","12/12 - 0s - loss: 0.4087 - val_loss: 0.2232 - 71ms/epoch - 6ms/step\n","Epoch 18/100\n","12/12 - 0s - loss: 0.3998 - val_loss: 0.2101 - 56ms/epoch - 5ms/step\n","Epoch 19/100\n","12/12 - 0s - loss: 0.3915 - val_loss: 0.2046 - 69ms/epoch - 6ms/step\n","Epoch 20/100\n","12/12 - 0s - loss: 0.3837 - val_loss: 0.2032 - 57ms/epoch - 5ms/step\n","Epoch 21/100\n","12/12 - 0s - loss: 0.3761 - val_loss: 0.2033 - 59ms/epoch - 5ms/step\n","Epoch 22/100\n","12/12 - 0s - loss: 0.3685 - val_loss: 0.2039 - 55ms/epoch - 5ms/step\n","Epoch 23/100\n","12/12 - 0s - loss: 0.3610 - val_loss: 0.2046 - 60ms/epoch - 5ms/step\n","Epoch 24/100\n","12/12 - 0s - loss: 0.3533 - val_loss: 0.2053 - 56ms/epoch - 5ms/step\n","Epoch 25/100\n","12/12 - 0s - loss: 0.3456 - val_loss: 0.2064 - 53ms/epoch - 4ms/step\n","Epoch 26/100\n","12/12 - 0s - loss: 0.3380 - val_loss: 0.2082 - 54ms/epoch - 4ms/step\n","Epoch 27/100\n","12/12 - 0s - loss: 0.3304 - val_loss: 0.2102 - 69ms/epoch - 6ms/step\n","Epoch 28/100\n","12/12 - 0s - loss: 0.3230 - val_loss: 0.2117 - 58ms/epoch - 5ms/step\n","Epoch 29/100\n","12/12 - 0s - loss: 0.3160 - val_loss: 0.2129 - 57ms/epoch - 5ms/step\n","Epoch 30/100\n","12/12 - 0s - loss: 0.3097 - val_loss: 0.2131 - 59ms/epoch - 5ms/step\n","Epoch 31/100\n","12/12 - 0s - loss: 0.3044 - val_loss: 0.2131 - 68ms/epoch - 6ms/step\n","Epoch 32/100\n","12/12 - 0s - loss: 0.3000 - val_loss: 0.2130 - 57ms/epoch - 5ms/step\n","Epoch 33/100\n","12/12 - 0s - loss: 0.2965 - val_loss: 0.2130 - 68ms/epoch - 6ms/step\n","Epoch 34/100\n","12/12 - 0s - loss: 0.2938 - val_loss: 0.2129 - 55ms/epoch - 5ms/step\n","Epoch 35/100\n","12/12 - 0s - loss: 0.2918 - val_loss: 0.2133 - 64ms/epoch - 5ms/step\n","Epoch 36/100\n","12/12 - 0s - loss: 0.2902 - val_loss: 0.2139 - 57ms/epoch - 5ms/step\n","Epoch 37/100\n","12/12 - 0s - loss: 0.2889 - val_loss: 0.2146 - 54ms/epoch - 5ms/step\n","Epoch 38/100\n","12/12 - 0s - loss: 0.2879 - val_loss: 0.2155 - 71ms/epoch - 6ms/step\n","Epoch 39/100\n","12/12 - 0s - loss: 0.2871 - val_loss: 0.2158 - 71ms/epoch - 6ms/step\n","Epoch 40/100\n","12/12 - 0s - loss: 0.2863 - val_loss: 0.2161 - 59ms/epoch - 5ms/step\n","Epoch 41/100\n","12/12 - 0s - loss: 0.2857 - val_loss: 0.2170 - 68ms/epoch - 6ms/step\n","Epoch 42/100\n","12/12 - 0s - loss: 0.2852 - val_loss: 0.2181 - 59ms/epoch - 5ms/step\n","Epoch 43/100\n","12/12 - 0s - loss: 0.2847 - val_loss: 0.2189 - 55ms/epoch - 5ms/step\n","Epoch 44/100\n","12/12 - 0s - loss: 0.2843 - val_loss: 0.2196 - 53ms/epoch - 4ms/step\n","Epoch 45/100\n","12/12 - 0s - loss: 0.2839 - val_loss: 0.2203 - 54ms/epoch - 4ms/step\n","Epoch 46/100\n","12/12 - 0s - loss: 0.2835 - val_loss: 0.2213 - 67ms/epoch - 6ms/step\n","Epoch 47/100\n","12/12 - 0s - loss: 0.2831 - val_loss: 0.2221 - 56ms/epoch - 5ms/step\n","Epoch 48/100\n","12/12 - 0s - loss: 0.2827 - val_loss: 0.2226 - 70ms/epoch - 6ms/step\n","Epoch 49/100\n","12/12 - 0s - loss: 0.2824 - val_loss: 0.2230 - 55ms/epoch - 5ms/step\n","Epoch 50/100\n","12/12 - 0s - loss: 0.2821 - val_loss: 0.2236 - 54ms/epoch - 4ms/step\n","Epoch 51/100\n","12/12 - 0s - loss: 0.2817 - val_loss: 0.2243 - 70ms/epoch - 6ms/step\n","Epoch 52/100\n","12/12 - 0s - loss: 0.2814 - val_loss: 0.2250 - 70ms/epoch - 6ms/step\n","Epoch 53/100\n","12/12 - 0s - loss: 0.2811 - val_loss: 0.2254 - 67ms/epoch - 6ms/step\n","Epoch 54/100\n","12/12 - 0s - loss: 0.2808 - val_loss: 0.2262 - 74ms/epoch - 6ms/step\n","Epoch 55/100\n","12/12 - 0s - loss: 0.2805 - val_loss: 0.2270 - 67ms/epoch - 6ms/step\n","Epoch 56/100\n","12/12 - 0s - loss: 0.2803 - val_loss: 0.2279 - 54ms/epoch - 4ms/step\n","Epoch 57/100\n","12/12 - 0s - loss: 0.2800 - val_loss: 0.2290 - 69ms/epoch - 6ms/step\n","Epoch 58/100\n","12/12 - 0s - loss: 0.2797 - val_loss: 0.2298 - 65ms/epoch - 5ms/step\n","Epoch 59/100\n","12/12 - 0s - loss: 0.2794 - val_loss: 0.2307 - 63ms/epoch - 5ms/step\n","Epoch 60/100\n","12/12 - 0s - loss: 0.2792 - val_loss: 0.2314 - 68ms/epoch - 6ms/step\n","Epoch 61/100\n","12/12 - 0s - loss: 0.2789 - val_loss: 0.2321 - 83ms/epoch - 7ms/step\n","Epoch 62/100\n","12/12 - 0s - loss: 0.2787 - val_loss: 0.2328 - 58ms/epoch - 5ms/step\n","Epoch 63/100\n","12/12 - 0s - loss: 0.2784 - val_loss: 0.2343 - 76ms/epoch - 6ms/step\n","Epoch 64/100\n","12/12 - 0s - loss: 0.2782 - val_loss: 0.2354 - 83ms/epoch - 7ms/step\n","Epoch 65/100\n","12/12 - 0s - loss: 0.2779 - val_loss: 0.2361 - 71ms/epoch - 6ms/step\n","Epoch 66/100\n","12/12 - 0s - loss: 0.2777 - val_loss: 0.2370 - 69ms/epoch - 6ms/step\n","Epoch 67/100\n","12/12 - 0s - loss: 0.2774 - val_loss: 0.2379 - 68ms/epoch - 6ms/step\n","Epoch 68/100\n","12/12 - 0s - loss: 0.2772 - val_loss: 0.2388 - 69ms/epoch - 6ms/step\n","Epoch 69/100\n","12/12 - 0s - loss: 0.2770 - val_loss: 0.2398 - 76ms/epoch - 6ms/step\n","Epoch 70/100\n","12/12 - 0s - loss: 0.2767 - val_loss: 0.2407 - 69ms/epoch - 6ms/step\n","Epoch 71/100\n","12/12 - 0s - loss: 0.2765 - val_loss: 0.2418 - 75ms/epoch - 6ms/step\n","Epoch 72/100\n","12/12 - 0s - loss: 0.2763 - val_loss: 0.2428 - 58ms/epoch - 5ms/step\n","Epoch 73/100\n","12/12 - 0s - loss: 0.2761 - val_loss: 0.2438 - 71ms/epoch - 6ms/step\n","Epoch 74/100\n","12/12 - 0s - loss: 0.2758 - val_loss: 0.2451 - 56ms/epoch - 5ms/step\n","Epoch 75/100\n","12/12 - 0s - loss: 0.2756 - val_loss: 0.2457 - 74ms/epoch - 6ms/step\n","Epoch 76/100\n","12/12 - 0s - loss: 0.2754 - val_loss: 0.2469 - 54ms/epoch - 5ms/step\n","Epoch 77/100\n","12/12 - 0s - loss: 0.2752 - val_loss: 0.2478 - 59ms/epoch - 5ms/step\n","Epoch 78/100\n","12/12 - 0s - loss: 0.2750 - val_loss: 0.2490 - 64ms/epoch - 5ms/step\n","Epoch 79/100\n","12/12 - 0s - loss: 0.2747 - val_loss: 0.2498 - 58ms/epoch - 5ms/step\n","Epoch 80/100\n","12/12 - 0s - loss: 0.2745 - val_loss: 0.2511 - 60ms/epoch - 5ms/step\n","Epoch 81/100\n","12/12 - 0s - loss: 0.2743 - val_loss: 0.2515 - 71ms/epoch - 6ms/step\n","Epoch 82/100\n","12/12 - 0s - loss: 0.2741 - val_loss: 0.2523 - 83ms/epoch - 7ms/step\n","Epoch 83/100\n","12/12 - 0s - loss: 0.2739 - val_loss: 0.2533 - 58ms/epoch - 5ms/step\n","Epoch 84/100\n","12/12 - 0s - loss: 0.2737 - val_loss: 0.2542 - 70ms/epoch - 6ms/step\n","Epoch 85/100\n","12/12 - 0s - loss: 0.2735 - val_loss: 0.2553 - 71ms/epoch - 6ms/step\n","Epoch 86/100\n","12/12 - 0s - loss: 0.2733 - val_loss: 0.2563 - 73ms/epoch - 6ms/step\n","Epoch 87/100\n","12/12 - 0s - loss: 0.2731 - val_loss: 0.2573 - 58ms/epoch - 5ms/step\n","Epoch 88/100\n","12/12 - 0s - loss: 0.2730 - val_loss: 0.2581 - 56ms/epoch - 5ms/step\n","Epoch 89/100\n","12/12 - 0s - loss: 0.2728 - val_loss: 0.2591 - 60ms/epoch - 5ms/step\n","Epoch 90/100\n","12/12 - 0s - loss: 0.2726 - val_loss: 0.2600 - 68ms/epoch - 6ms/step\n","Epoch 91/100\n","12/12 - 0s - loss: 0.2724 - val_loss: 0.2610 - 57ms/epoch - 5ms/step\n","Epoch 92/100\n","12/12 - 0s - loss: 0.2722 - val_loss: 0.2621 - 55ms/epoch - 5ms/step\n","Epoch 93/100\n","12/12 - 0s - loss: 0.2721 - val_loss: 0.2635 - 58ms/epoch - 5ms/step\n","Epoch 94/100\n","12/12 - 0s - loss: 0.2719 - val_loss: 0.2646 - 75ms/epoch - 6ms/step\n","Epoch 95/100\n","12/12 - 0s - loss: 0.2717 - val_loss: 0.2655 - 59ms/epoch - 5ms/step\n","Epoch 96/100\n","12/12 - 0s - loss: 0.2716 - val_loss: 0.2663 - 73ms/epoch - 6ms/step\n","Epoch 97/100\n","12/12 - 0s - loss: 0.2714 - val_loss: 0.2676 - 55ms/epoch - 5ms/step\n","Epoch 98/100\n","12/12 - 0s - loss: 0.2712 - val_loss: 0.2689 - 69ms/epoch - 6ms/step\n","Epoch 99/100\n","12/12 - 0s - loss: 0.2711 - val_loss: 0.2699 - 70ms/epoch - 6ms/step\n","Epoch 100/100\n","12/12 - 0s - loss: 0.2709 - val_loss: 0.2708 - 73ms/epoch - 6ms/step\n"]}]},{"cell_type":"code","source":["# list all data in history\n","print(history.history.keys())\n","# summarize history for loss\n","plt.plot(history.history['loss'])\n","plt.plot(history.history['val_loss'])\n","plt.title('model loss')\n","plt.ylabel('loss')\n","plt.xlabel('epoch')\n","plt.legend(['train', 'test'], loc='upper left')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":316},"id":"FGap4hKaZ_QA","executionInfo":{"status":"ok","timestamp":1664743327247,"user_tz":-120,"elapsed":642,"user":{"displayName":"Pedro AH","userId":"08130580654054495788"}},"outputId":"44384ff2-c743-4590-8d71-95ba41dc72e1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["dict_keys(['loss', 'val_loss'])\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## Predicciones"],"metadata":{"id":"W3iXU9ZRZGVX"}},{"cell_type":"code","source":["#Predicciones con el test\n","y_pred_sc=lstm.predict(X_test)\n","y_pred_sc=y_pred_sc.reshape(-1, 1)\n","y_pred=sc2.inverse_transform(y_pred_sc)\n","y_pred\n","print(y_pred.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FRC2M04NY6Yx","executionInfo":{"status":"ok","timestamp":1664743975856,"user_tz":-120,"elapsed":230,"user":{"displayName":"Pedro AH","userId":"08130580654054495788"}},"outputId":"54249316-70dc-4816-814a-fa1e773e1517"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(151, 1)\n"]}]},{"cell_type":"code","source":["y_test=y_test.reshape(-1, 1)\n","y_test=sc2.inverse_transform(y_test)\n","y_test\n","print(y_test.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eZMyuuTUefkv","executionInfo":{"status":"ok","timestamp":1664744118371,"user_tz":-120,"elapsed":230,"user":{"displayName":"Pedro AH","userId":"08130580654054495788"}},"outputId":"b4f7db28-b083-47f9-fe5e-1660878c5d4d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(151, 1)\n"]}]},{"cell_type":"code","source":["#Se pasa a dataframe\n","y_pred_test=pd.DataFrame(y_pred)\n","y_pred_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"l7TEnyzhdVtK","executionInfo":{"status":"ok","timestamp":1664743935276,"user_tz":-120,"elapsed":3,"user":{"displayName":"Pedro AH","userId":"08130580654054495788"}},"outputId":"6c6aea20-2e53-4779-e7ce-4b0cfbe8c473"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               0\n","0    9165.797852\n","1    9179.153320\n","2    9222.448242\n","3    9192.698242\n","4    9173.972656\n","..           ...\n","146  8565.525391\n","147  8661.803711\n","148  8734.199219\n","149  8835.822266\n","150  8888.460938\n","\n","[151 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-f3f53d96-7480-4c7b-a530-d6ff2e0ed6b9\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>9165.797852</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>9179.153320</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>9222.448242</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>9192.698242</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>9173.972656</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>146</th>\n","      <td>8565.525391</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>8661.803711</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>8734.199219</td>\n","    </tr>\n","    <tr>\n","      <th>149</th>\n","      <td>8835.822266</td>\n","    </tr>\n","    <tr>\n","      <th>150</th>\n","      <td>8888.460938</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>151 rows × 1 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f3f53d96-7480-4c7b-a530-d6ff2e0ed6b9')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f3f53d96-7480-4c7b-a530-d6ff2e0ed6b9 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f3f53d96-7480-4c7b-a530-d6ff2e0ed6b9');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":92}]},{"cell_type":"code","source":["#Se pasa a dataframe\n","y_test_test=pd.DataFrame(y_test)\n","y_test_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"HVtV6icHe4Tt","executionInfo":{"status":"ok","timestamp":1664744145198,"user_tz":-120,"elapsed":282,"user":{"displayName":"Pedro AH","userId":"08130580654054495788"}},"outputId":"fb4e998b-b383-4f9d-ace4-11429e9b9e49"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          0\n","0    9189.7\n","1    9180.7\n","2    9142.4\n","3    9088.3\n","4    9163.6\n","..      ...\n","146  8459.1\n","147  8563.7\n","148  8563.7\n","149  8688.9\n","150  8673.7\n","\n","[151 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-23fb9691-fe44-40f6-ac61-ab333d35bdad\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>9189.7</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>9180.7</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>9142.4</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>9088.3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>9163.6</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>146</th>\n","      <td>8459.1</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>8563.7</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>8563.7</td>\n","    </tr>\n","    <tr>\n","      <th>149</th>\n","      <td>8688.9</td>\n","    </tr>\n","    <tr>\n","      <th>150</th>\n","      <td>8673.7</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>151 rows × 1 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-23fb9691-fe44-40f6-ac61-ab333d35bdad')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-23fb9691-fe44-40f6-ac61-ab333d35bdad button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-23fb9691-fe44-40f6-ac61-ab333d35bdad');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":100}]},{"cell_type":"markdown","source":["### Test"],"metadata":{"id":"bJ4FCWEZCXTe"}},{"cell_type":"code","source":["y_verdad=y_test_test.copy()\n","y_verdad.reset_index(drop=True, inplace=True)\n","y_verdad.columns=['futIBEX']\n","y_verdad"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1664745396896,"user_tz":-120,"elapsed":246,"user":{"displayName":"Pedro AH","userId":"08130580654054495788"}},"outputId":"ed17e11c-2bbf-4f37-e5a8-053a3ab95b5f","id":"38V-opDcCXTe"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     futIBEX\n","0     9189.7\n","1     9180.7\n","2     9142.4\n","3     9088.3\n","4     9163.6\n","..       ...\n","146   8459.1\n","147   8563.7\n","148   8563.7\n","149   8688.9\n","150   8673.7\n","\n","[151 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-9884fbac-a92f-46c2-82dd-7a8f9c959714\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>futIBEX</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>9189.7</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>9180.7</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>9142.4</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>9088.3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>9163.6</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>146</th>\n","      <td>8459.1</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>8563.7</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>8563.7</td>\n","    </tr>\n","    <tr>\n","      <th>149</th>\n","      <td>8688.9</td>\n","    </tr>\n","    <tr>\n","      <th>150</th>\n","      <td>8673.7</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>151 rows × 1 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9884fbac-a92f-46c2-82dd-7a8f9c959714')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9884fbac-a92f-46c2-82dd-7a8f9c959714 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9884fbac-a92f-46c2-82dd-7a8f9c959714');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":159}]},{"cell_type":"code","source":["test_predictions=y_pred_test.copy()\n","y_prediccion=pd.DataFrame(test_predictions)\n","\n","lista=[]\n","for i in range(0,y_prediccion.shape[0]):\n","  lista.append(y_prediccion.iloc[i].values[0])\n","  type\n","lista\n","y_prediccion=pd.DataFrame(lista, columns=['pred'])\n","y_prediccion"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1664745399047,"user_tz":-120,"elapsed":240,"user":{"displayName":"Pedro AH","userId":"08130580654054495788"}},"outputId":"06d33f99-07b0-4d92-bba3-98bbd78cd74b","id":"SHcONQiDCXTe"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            pred\n","0    9165.797852\n","1    9179.153320\n","2    9222.448242\n","3    9192.698242\n","4    9173.972656\n","..           ...\n","146  8565.525391\n","147  8661.803711\n","148  8734.199219\n","149  8835.822266\n","150  8888.460938\n","\n","[151 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-06ced5dc-2b37-4b4d-a80f-b25d81178af7\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pred</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>9165.797852</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>9179.153320</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>9222.448242</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>9192.698242</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>9173.972656</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>146</th>\n","      <td>8565.525391</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>8661.803711</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>8734.199219</td>\n","    </tr>\n","    <tr>\n","      <th>149</th>\n","      <td>8835.822266</td>\n","    </tr>\n","    <tr>\n","      <th>150</th>\n","      <td>8888.460938</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>151 rows × 1 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-06ced5dc-2b37-4b4d-a80f-b25d81178af7')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-06ced5dc-2b37-4b4d-a80f-b25d81178af7 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-06ced5dc-2b37-4b4d-a80f-b25d81178af7');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":160}]},{"cell_type":"markdown","source":["### Metricas"],"metadata":{"id":"ZwRQ7Jd2kDwZ"}},{"cell_type":"code","source":["#Metricas relevantes del modelo generado y sus predicciones\n","\n","\n","\n","#MAE (Media de Errores Absoluta)\n","mae = metrics.mean_absolute_error(y_verdad['futIBEX'], y_prediccion['pred'])\n","\n","#MAPE (Media de Errores Absolutos Porcentuales)\n","mape = mean_absolute_percentage_error(y_verdad['futIBEX'], y_prediccion['pred'])*100\n","\n","#MSE (Media de Errores al Cuadrado)\n","mse = metrics.mean_squared_error(y_verdad['futIBEX'], y_prediccion['pred'])\n","\n","#RMSE (Raíz de la Media de Errores al Cuadrado)\n","rmse = np.sqrt(mse)\n","\n","#R2\n","r2 = metrics.r2_score(y_verdad['futIBEX'],y_prediccion['pred'])\n","\n","print(\"- TEST -\")\n","print(\"Resultado de las métricas:\")\n","print(\"MAE:\",round(mae, 2))\n","print(\"MAPE:\",round(mape, 2),\"%\")\n","print(\"RMSE\", round(rmse, 2))\n","print(\"R2:\", round(r2, 2))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1664745539262,"user_tz":-120,"elapsed":2,"user":{"displayName":"Pedro AH","userId":"08130580654054495788"}},"outputId":"d1b03ceb-fa43-415e-8511-b582246a3fe5","id":"HkRTOPt3CXTc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["- TEST -\n","Resultado de las métricas:\n","MAE: 206.02\n","MAPE: 2.34 %\n","RMSE 246.0\n","R2: -0.04\n"]}]},{"cell_type":"markdown","source":["### Analisis de residuos"],"metadata":{"id":"JtxBkGhMkB3G"}},{"cell_type":"code","source":["# Análisis de residuos\n","residuos_test=y_prediccion['pred'] - y_verdad['futIBEX']\n","residuos_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1664745401322,"user_tz":-120,"elapsed":268,"user":{"displayName":"Pedro AH","userId":"08130580654054495788"}},"outputId":"31412697-d1e5-4a13-a4e9-b21de6cbe271","id":"IkeFDtcqCXTe"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0      -23.902148\n","1       -1.546680\n","2       80.048242\n","3      104.398242\n","4       10.372656\n","          ...    \n","146    106.425391\n","147     98.103711\n","148    170.499219\n","149    146.922266\n","150    214.760937\n","Length: 151, dtype: float64"]},"metadata":{},"execution_count":161}]},{"cell_type":"code","source":["#Gráficas para analizar los residuos\n","fig, axes = plt.subplots(nrows=3, ncols=2, figsize=(9, 8))\n","\n","#Gráfica 1: Predicción vs Real\n","axes[0, 0].scatter(y_test, test_predictions, edgecolors=(0, 0, 0), alpha = 0.4)\n","axes[0, 0].plot([y_test.min(), y_test.max()], [y_test.min(), y_test.max()],\n","                'k--', color = 'black', lw=2)\n","axes[0, 0].set_title('Valor predicho vs valor real', fontsize = 10, fontweight = \"bold\")\n","axes[0, 0].set_xlabel('Real')\n","axes[0, 0].set_ylabel('Predicción')\n","axes[0, 0].tick_params(labelsize = 7)\n","\n","#Gráfica 2: Residuos\n","axes[0, 1].scatter(list(range(len(y_test))), residuos_test,\n","                   edgecolors=(0, 0, 0), alpha = 0.4)\n","axes[0, 1].axhline(y = 0, linestyle = '--', color = 'black', lw=2)\n","axes[0, 1].set_title('Residuos del modelo', fontsize = 10, fontweight = \"bold\")\n","axes[0, 1].set_xlabel('id')\n","axes[0, 1].set_ylabel('Residuo')\n","axes[0, 1].tick_params(labelsize = 7)\n","\n","sns.histplot(\n","    data    = residuos_test,\n","    stat    = \"density\",\n","    kde     = True,\n","    line_kws= {'linewidth': 1},\n","    color   = \"firebrick\",\n","    alpha   = 0.3,\n","    ax      = axes[1, 0]\n",")\n","\n","#Gráfica 3: Distribución de residuos\n","axes[1, 0].set_title('Distribución residuos del modelo', fontsize = 10,\n","                     fontweight = \"bold\")\n","axes[1, 0].set_xlabel(\"Residuo\")\n","axes[1, 0].tick_params(labelsize = 7)\n","\n","\n","sm.qqplot(\n","    residuos_test,\n","    fit   = True,\n","    line  = 'q',\n","    ax    = axes[1, 1], \n","    color = 'firebrick',\n","    alpha = 0.4,\n","    lw    = 2\n",")\n","\n","#Gráfica 4: Q-Q del modelo\n","axes[1, 1].set_title('Q-Q residuos del modelo', fontsize = 10, fontweight = \"bold\")\n","axes[1, 1].tick_params(labelsize = 7)\n","\n","#Gráfica 5: Residuos del model vs predicción\n","axes[2, 0].scatter(test_predictions, residuos_test,\n","                   edgecolors=(0, 0, 0), alpha = 0.4)\n","axes[2, 0].axhline(y = 0, linestyle = '--', color = 'black', lw=2)\n","axes[2, 0].set_title('Residuos del modelo vs predicción', fontsize = 10, fontweight = \"bold\")\n","axes[2, 0].set_xlabel('Predicción')\n","axes[2, 0].set_ylabel('Residuo')\n","axes[2, 0].tick_params(labelsize = 7)\n","\n","# Se eliminan los axes vacíos\n","fig.delaxes(axes[2,1])\n","\n","fig.tight_layout()\n","plt.subplots_adjust(top=0.9)\n","fig.suptitle('Diagnóstico residuos de test', fontsize = 12, fontweight = \"bold\");"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":585},"executionInfo":{"status":"ok","timestamp":1664745407173,"user_tz":-120,"elapsed":4457,"user":{"displayName":"Pedro AH","userId":"08130580654054495788"}},"outputId":"3620ac63-ee64-4c63-eb40-80d1d7b2fd11","id":"moydHRRFCXTe"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 648x576 with 5 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Para comprobar si los residuos siguen una distribución normal, se emplearán los test estadísticos de Shapiro y de D'Agostino's K-squared test"],"metadata":{"id":"6nyBlYk6CXTe"}},{"cell_type":"code","source":["shapiro_test = stats.shapiro(residuos_test)\n","shapiro_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1664745417737,"user_tz":-120,"elapsed":259,"user":{"displayName":"Pedro AH","userId":"08130580654054495788"}},"outputId":"8ef4c6e9-dc00-40e5-a31d-5a647e982c64","id":"jtTjID9QCXTe"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["ShapiroResult(statistic=0.9575477242469788, pvalue=0.00013883743667975068)"]},"metadata":{},"execution_count":163}]},{"cell_type":"code","source":["k2, p_value = stats.normaltest(residuos_test)\n","print(f\"Estadítico= {k2}, p-value = {p_value}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1664745419863,"user_tz":-120,"elapsed":236,"user":{"displayName":"Pedro AH","userId":"08130580654054495788"}},"outputId":"bc281f71-3067-43ee-d3c6-453b9e4dfc24","id":"CA6-mMR_CXTe"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Estadítico= 8.059554787655802, p-value = 0.01777828706963494\n"]}]},{"cell_type":"markdown","source":["En vista de los malos resultados de ajuste del modelo de redes neuronales a los datos, se decide excluirlo de los modelos predictores"],"metadata":{"id":"vuk6EzeumOu7"}}]}